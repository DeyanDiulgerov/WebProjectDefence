@using WebProject.Models.GamingProductViewModel
@model AllGamingProductsQueryModel

@{
    ViewBag.Title = "List of our gaming products";
}

<h2 class="text-center text-white">@ViewBag.Title</h2>
<hr />

<body background="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQWoY9TpSx88HqnbRAqMnQCq08pSvv5MLNFmg&usqp=CAU">
</body>


<form method="get">
    <div class="row">
        <div class="form-group col-md-3 text-white">
            <label asp-for="SearchTerm">Search</label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group text-white">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Lowest price first</option>
                    <option value="2">Lowest discount price first</option>
                    <option value="3">Highest sales</option>
                </select>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalGamingProductsCount /
        AllGamingProductsQueryModel.ProductsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="GamingProducts"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.GamingProducts.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="GamingProducts"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>

@if (!Model.GamingProducts.Any())
{
    <h2 class="text-center">No gaming products found by the given criteria!</h2>
}

<div class="row">
    @foreach (var product in Model.GamingProducts)
    {
        <div class="card col-4" style="width: 20rem;">
            <img class="card-img-top" style="width: 18rem;"
             src="@product.ImageUrl" alt="Gaming Product Image">
            <div class="card-body">

                <h5 class="card-title mt-1">@product.Name</h5>
                <p class="mb-0">Company: @product.Company</p>
                <p class="mb-0">Description: @product.Description</p>
                <p class="mb-0">AvailableFrom: @product.AvailableFrom</p>
                <p class="mb-0">Sales: @product.Sales</p>
                <p class="mb-0">Price: @product.Price</p>
                <p class="mb-0">DiscountPrice: @product.DiscountPrice</p>
            </div>

            <form class="input-group-sm" asp-route-productId="@product.Id" asp-controller="GamingProducts" asp-action="Details" method="post">
                <input type="submit" value="Details" class="fs-6 btn btn-success mb-3 p-2" />
            </form>
            <form class="input-group-sm" asp-route-productId="@product.Id" asp-controller="GamingProducts" asp-action="AddToCollection" method="post">
                <input type="submit" value="Add to my cart" class="fs-6 btn btn-success mb-3 p-2" />
            </form>
        </div>
    }
</div>
